name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.1.4)'
        required: true
        type: string

jobs:
  build-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Node modules installed:"
          ls -la node_modules

      - name: Build
        run: |
          echo "Installing ncc..."
          npm install -g @vercel/ncc
          echo "Building project..."
          npm run build
          echo "Build output:"
          ls -la dist/

      - name: Commit and Push Built Files
        run: |
          if [[ -n "$(git status --porcelain dist/)" ]]; then
            echo "Changes detected in dist folder. Committing..."
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add dist/
            git commit -m "chore: update built files for release ${{ github.event.inputs.version || github.ref_name }}"
            git push
          else
            echo "No changes detected in dist folder. Skipping commit."
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            ACTIONS_RUNNER_DEBUG: true
        with:
            tag_name: ${{ github.event.inputs.version || github.ref_name }}
            release_name: secrets-action
            draft: false
            prerelease: false

      - name: Update Major Version Tag
        run: |
          # Configure git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Get the version (either from input or from the tag)
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          # Remove 'v' prefix if present
          VERSION="${VERSION#v}"
          # Extract major version
          MAJOR_VERSION="v${VERSION%%.*}"
          
          echo "Updating major version tag: $MAJOR_VERSION"
          
          # Delete the major version tag if it exists (both locally and remotely)
          git tag -d "$MAJOR_VERSION" || true
          git push origin ":refs/tags/$MAJOR_VERSION" || true
          
          # Create new tag pointing to the current commit with [skip ci] message
          git tag -a "$MAJOR_VERSION" -m "[skip ci] Update major version tag to ${VERSION}"
          git push origin "$MAJOR_VERSION"
            