name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.1.4)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Node modules installed:"
          ls -la node_modules

      - name: Build
        run: |
          echo "Installing ncc..."
          npm install -g @vercel/ncc
          echo "Building project..."
          npm run build
          echo "Build output:"
          ls -la dist/


      - name: Commit built action
        run: |
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add dist
            git commit -m "Build action"
            git push

      - name: Create GitHub release
        uses: iamkubi/github-release@2.0
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.event.inputs.version || github.ref_name }}
            name: secrets-action
            draft: false
            prerelease: false
            allow_override: true


    #   - name: Create Release
    #     id: create_release
    #     uses: actions/create-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #       ACTIONS_RUNNER_DEBUG: true
    #     with:
    #       tag_name: ${{ github.event.inputs.version || github.ref_name }}
    #       release_name: ${{ github.event.inputs.version || github.ref_name }}
    #       draft: false
    #       prerelease: false
          
    #   - name: Zip Release Files
    #     run: |
    #       echo "Creating release zip..."
    #       zip -r release.zip . -x "*.git*" "node_modules/*" "test/*" ".github/*"
    #       echo "Zip contents:"
    #       unzip -l release.zip

    #   - name: Upload Release Asset
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: ./release.zip
    #       asset_name: release.zip
    #       asset_content_type: application/zip